// <auto-generated />
using System;
using IVY.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IVYDashboard.API.Migrations
{
    [DbContext(typeof(IVYDbContext))]
    [Migration("20250531115854_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IVY.Domain.Models.Products.Category", b =>
                {
                    b.Property<int>("Category__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Category__Id"));

                    b.Property<string>("Category__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category__Status")
                        .HasColumnType("int");

                    b.Property<int>("Category__Type")
                        .HasColumnType("int");

                    b.HasKey("Category__Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Collection", b =>
                {
                    b.Property<int>("Collection__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Collection__Id"));

                    b.Property<string>("Collection__Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Collection__Status")
                        .HasColumnType("int");

                    b.HasKey("Collection__Id");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Color", b =>
                {
                    b.Property<int>("Color__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Color__Id"));

                    b.Property<string>("Color__Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color__Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Color__Id");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ColorSubColor", b =>
                {
                    b.Property<int>("ColorSubColor__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorSubColor__Id"));

                    b.Property<int>("ColorSubColor__ColorId")
                        .HasColumnType("int");

                    b.Property<int>("ColorSubColor__SubColorId")
                        .HasColumnType("int");

                    b.HasKey("ColorSubColor__Id");

                    b.HasIndex("ColorSubColor__ColorId");

                    b.HasIndex("ColorSubColor__SubColorId");

                    b.ToTable("ColorSubColors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Product", b =>
                {
                    b.Property<int>("Product__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Product__Id"));

                    b.Property<DateTime>("Product__CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Product__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Product__SeasonId")
                        .HasColumnType("tinyint");

                    b.Property<int>("Product__Sold")
                        .HasColumnType("int");

                    b.Property<byte>("Product__Status")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("Product__UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Product__Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductCollection", b =>
                {
                    b.Property<int>("ProductCollection__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCollection__Id"));

                    b.Property<int>("ProductCollection__CollectionId")
                        .HasColumnType("int");

                    b.Property<int>("ProductCollection__ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductCollection__Id");

                    b.HasIndex("ProductCollection__CollectionId");

                    b.HasIndex("ProductCollection__ProductId");

                    b.ToTable("ProductCollections");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductFavorite", b =>
                {
                    b.Property<int>("ProductFavorite__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductFavorite__Id"));

                    b.Property<int>("ProductFavorite__ProductId")
                        .HasColumnType("int");

                    b.HasKey("ProductFavorite__Id");

                    b.HasIndex("ProductFavorite__ProductId");

                    b.ToTable("ProductFavorites");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubCategory", b =>
                {
                    b.Property<int>("ProductSubCategory__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSubCategory__Id"));

                    b.Property<int>("ProductSubCategory__ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductSubCategory__SubCategoryId")
                        .HasColumnType("int");

                    b.HasKey("ProductSubCategory__Id");

                    b.HasIndex("ProductSubCategory__ProductId");

                    b.HasIndex("ProductSubCategory__SubCategoryId");

                    b.ToTable("ProductSubCategories");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubColor", b =>
                {
                    b.Property<int>("ProductSubColor__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSubColor__Id"));

                    b.Property<DateTime>("ProductSubColor__CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<byte>("ProductSubColor__Discount")
                        .HasColumnType("tinyint");

                    b.Property<decimal>("ProductSubColor__Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductSubColor__ProductId")
                        .HasColumnType("int");

                    b.Property<byte>("ProductSubColor__Status")
                        .HasColumnType("tinyint");

                    b.Property<int>("ProductSubColor__SubColorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ProductSubColor__UpdateAt")
                        .HasColumnType("datetime2");

                    b.HasKey("ProductSubColor__Id");

                    b.HasIndex("ProductSubColor__ProductId");

                    b.HasIndex("ProductSubColor__SubColorId");

                    b.ToTable("ProductSubColors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubColorFile", b =>
                {
                    b.Property<int>("ProductSubColorFile__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSubColorFile__Id"));

                    b.Property<byte>("ProductSubColorFile__Index")
                        .HasColumnType("tinyint");

                    b.Property<string>("ProductSubColorFile__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductSubColorFile__ProductSubColorId")
                        .HasColumnType("int");

                    b.HasKey("ProductSubColorFile__Id");

                    b.HasIndex("ProductSubColorFile__ProductSubColorId");

                    b.ToTable("ProductSubColorFiles");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Size", b =>
                {
                    b.Property<int>("Size__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Size__Id"));

                    b.Property<int?>("Size__L")
                        .HasColumnType("int");

                    b.Property<int?>("Size__M")
                        .HasColumnType("int");

                    b.Property<int>("Size__ProductSubColorId")
                        .HasColumnType("int");

                    b.Property<int?>("Size__S")
                        .HasColumnType("int");

                    b.Property<int?>("Size__XL")
                        .HasColumnType("int");

                    b.Property<int?>("Size__XXl")
                        .HasColumnType("int");

                    b.HasKey("Size__Id");

                    b.HasIndex("Size__ProductSubColorId")
                        .IsUnique();

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.SubCategory", b =>
                {
                    b.Property<int>("SubCategory__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubCategory__Id"));

                    b.Property<int>("SubCategory__CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("SubCategory__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubCategory__Status")
                        .HasColumnType("int");

                    b.HasKey("SubCategory__Id");

                    b.HasIndex("SubCategory__CategoryId");

                    b.ToTable("SubCategories");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.SubColor", b =>
                {
                    b.Property<int>("SubColor__Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubColor__Id"));

                    b.Property<string>("SubColor__Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubColor__Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("SubColor__Status")
                        .HasColumnType("tinyint");

                    b.HasKey("SubColor__Id");

                    b.ToTable("SubColors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Users.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumberConfirmed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("IVY.Domain.Models.Users.EmployeeIdentity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Employees", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("UserId");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ColorSubColor", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Color", "Color")
                        .WithMany("ColorSubColors")
                        .HasForeignKey("ColorSubColor__ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVY.Domain.Models.Products.SubColor", "SubColor")
                        .WithMany("ColorSubColors")
                        .HasForeignKey("ColorSubColor__SubColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("SubColor");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductCollection", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Collection", "Collection")
                        .WithMany("ProductCollections")
                        .HasForeignKey("ProductCollection__CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVY.Domain.Models.Products.Product", "Product")
                        .WithMany("ProductCollections")
                        .HasForeignKey("ProductCollection__ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductFavorite", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductFavorite__ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubCategory", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Product", "Product")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("ProductSubCategory__ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVY.Domain.Models.Products.SubCategory", "SubCategory")
                        .WithMany("ProductSubCategories")
                        .HasForeignKey("ProductSubCategory__SubCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SubCategory");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubColor", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Product", "Product")
                        .WithMany("ProductSubColors")
                        .HasForeignKey("ProductSubColor__ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVY.Domain.Models.Products.SubColor", "SubColor")
                        .WithMany("ProductSubColors")
                        .HasForeignKey("ProductSubColor__SubColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("SubColor");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubColorFile", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.ProductSubColor", "ProductSubColor")
                        .WithMany("ProductSubColorFile")
                        .HasForeignKey("ProductSubColorFile__ProductSubColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSubColor");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Size", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.ProductSubColor", "ProductSubColor")
                        .WithOne("Size")
                        .HasForeignKey("IVY.Domain.Models.Products.Size", "Size__ProductSubColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductSubColor");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.SubCategory", b =>
                {
                    b.HasOne("IVY.Domain.Models.Products.Category", "Category")
                        .WithMany("SubCategories")
                        .HasForeignKey("SubCategory__CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("IVY.Domain.Models.Users.EmployeeIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("IVY.Domain.Models.Users.EmployeeIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<System.Guid>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IVY.Domain.Models.Users.EmployeeIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("IVY.Domain.Models.Users.EmployeeIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Category", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Collection", b =>
                {
                    b.Navigation("ProductCollections");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Color", b =>
                {
                    b.Navigation("ColorSubColors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.Product", b =>
                {
                    b.Navigation("ProductCollections");

                    b.Navigation("ProductSubCategories");

                    b.Navigation("ProductSubColors");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.ProductSubColor", b =>
                {
                    b.Navigation("ProductSubColorFile");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.SubCategory", b =>
                {
                    b.Navigation("ProductSubCategories");
                });

            modelBuilder.Entity("IVY.Domain.Models.Products.SubColor", b =>
                {
                    b.Navigation("ColorSubColors");

                    b.Navigation("ProductSubColors");
                });
#pragma warning restore 612, 618
        }
    }
}
